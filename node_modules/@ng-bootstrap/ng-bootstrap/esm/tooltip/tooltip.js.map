{"version":3,"sources":["tooltip/tooltip.ts"],"names":[],"mappings":"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","file":"tooltip/tooltip.js","sourcesContent":["import {\n  Component,\n  Directive,\n  Input,\n  ChangeDetectionStrategy,\n  OnInit,\n  AfterViewChecked,\n  Injector,\n  Renderer,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  ComponentFactory\n} from '@angular/core';\n\nimport {parseTriggers, Trigger} from '../util/triggers';\nimport {Positioning} from '../util/positioning';\n\n@Component({\n  selector: 'ngb-tooltip-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'[class]': '\"tooltip in tooltip-\" + placement', 'role': 'tooltip'},\n  template: `\n    <div class=\"tooltip-arrow\"></div>\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\n    `\n})\nexport class NgbTooltipWindow {\n  @Input() placement: string = 'top';\n}\n\n/**\n * A lightweight, extensible directive for fancy tooltip creation.\n */\n@Directive({selector: '[ngbTooltip]', exportAs: 'ngbTooltip'})\nexport class NgbTooltip implements OnInit, AfterViewChecked {\n  /**\n   * Content to be displayed as tooltip.\n   */\n  @Input() ngbTooltip: string | TemplateRef<any>;\n  /**\n   * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  @Input() placement = 'top';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of event names.\n   */\n  @Input() triggers = 'hover';\n\n  private _positioning = new Positioning();\n  private _windowFactory: ComponentFactory<NgbTooltipWindow>;\n  private _windowRef: ComponentRef<NgbTooltipWindow>;\n\n  constructor(\n      private _elementRef: ElementRef, private _viewContainerRef: ViewContainerRef, private _injector: Injector,\n      private _renderer: Renderer, componentFactoryResolver: ComponentFactoryResolver) {\n    this._windowFactory = componentFactoryResolver.resolveComponentFactory(NgbTooltipWindow);\n  }\n\n  open() {\n    if (!this._windowRef) {\n      const nodes = this._getContentNodes();\n      this._windowRef = this._viewContainerRef.createComponent(this._windowFactory, 0, this._injector, nodes);\n      this._windowRef.instance.placement = this.placement;\n    }\n  }\n\n  close(): void {\n    if (this._windowRef) {\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n      this._windowRef = null;\n    }\n  }\n\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  ngOnInit() {\n    const triggers = parseTriggers(this.triggers);\n\n    if (triggers.length === 1 && triggers[0].isManual()) {\n      return;\n    }\n\n    triggers.forEach((trigger: Trigger) => {\n      if (trigger.open === trigger.close) {\n        this._renderer.listen(this._elementRef.nativeElement, trigger.open, () => { this.toggle(); });\n      } else {\n        this._renderer.listen(this._elementRef.nativeElement, trigger.open, () => { this.open(); });\n        this._renderer.listen(this._elementRef.nativeElement, trigger.close, () => { this.close(); });\n      }\n    });\n  }\n\n  ngAfterViewChecked() {\n    if (this._windowRef) {\n      const targetPosition = this._positioning.positionElements(\n          this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement, false);\n\n      const targetStyle = this._windowRef.location.nativeElement.style;\n      targetStyle.top = `${targetPosition.top}px`;\n      targetStyle.left = `${targetPosition.left}px`;\n    }\n  }\n\n  private _getContentNodes() {\n    if (this.ngbTooltip instanceof TemplateRef) {\n      return [this._viewContainerRef.createEmbeddedView(<TemplateRef<NgbTooltipWindow>>this.ngbTooltip).rootNodes];\n    } else {\n      return [[this._renderer.createText(null, `${this.ngbTooltip}`)]];\n    }\n  }\n}\n\nexport const NGB_TOOLTIP_DIRECTIVES = [NgbTooltip];\n"],"sourceRoot":"/source/"}